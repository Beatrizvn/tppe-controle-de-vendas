// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id        Int      @id @default(autoincrement())
  nome      String
  telefone  String?
  endereco  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  vendas Venda[] 
}

model Fornecedor {
  id           Int      @id @default(autoincrement())
  nomeEmpresa  String
  cnpj         String   @unique
  email        String?  @unique
  telefone     String?
  endereco     String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  produtos Produto[] 
}

model Produto {
  id        Int      @id @default(autoincrement())
  codigo    String   @unique
  nome      String
  valorVenda  Decimal
  valorCompra Decimal
  categoria String
  estoque   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  fornecedorId Int
  fornecedor   Fornecedor @relation(fields: [fornecedorId], references: [id])
  itensVendidos ProdutoVendido[]
}

model Venda {
  id        Int      @id @default(autoincrement())
  data      DateTime @default(now())
  valorTotal Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  clienteId Int
  cliente   Cliente @relation(fields: [clienteId], references: [id])
  produtosVendidos ProdutoVendido[]
  pagamento Pagamento?
}

model ProdutoVendido {
  id        Int   @id @default(autoincrement())
  quantidade Int
  precoUnitario Decimal

  vendaId   Int
  venda     Venda   @relation(fields: [vendaId], references: [id])

  produtoId Int
  produto   Produto @relation(fields: [produtoId], references: [id])

  @@unique([vendaId, produtoId]) 
}

enum TipoPagamento {
  A_VISTA
  PARCELADO
}

model Pagamento {
  id        Int      @id @default(autoincrement())
  status    String   
  data      DateTime @default(now())
  tipo      TipoPagamento 

  desconto   Decimal?
  valorFinal Decimal?

  quantidadeParcelas Int?
  juros              Decimal?

  vendaId Int     @unique
  venda   Venda   @relation(fields: [vendaId], references: [id])
}